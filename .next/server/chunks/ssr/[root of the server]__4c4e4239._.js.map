{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/lib/stripe.ts"],"sourcesContent":["'server-only'\nimport Stripe from 'stripe'\n\nexport const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n    apiVersion: '2024-06-20',\n})\n\n"],"names":[],"mappings":";;;AACA;AADA;;AAGO,MAAM,SAAS,IAAI,sJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IAC7D,YAAY;AAChB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    // NEXT_PUBLIC_CLIENTVAR: process.env.NEXT_PUBLIC_CLIENTVAR,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,oIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IAEV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"@/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;SAAO,GAAG;YAAC;SAAQ;IAClE;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/lib/stripe-actions.ts"],"sourcesContent":["'use server'\n\nimport { auth } from \"@clerk/nextjs/server\";\nimport { stripe } from \"./stripe\";\nimport { redirect } from \"next/navigation\";\nimport { db } from \"@/server/db\";\n\nexport async function createCheckoutSession() {\n    const { userId } = await auth();\n\n    if (!userId) {\n        throw new Error('User not found');\n    }\n\n    const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        line_items: [\n            {\n                price: process.env.STRIPE_PRICE_ID,\n                quantity: 1,\n            },\n        ],\n        mode: 'subscription',\n        success_url: `${process.env.NEXT_PUBLIC_URL}/mail`,\n        cancel_url: `${process.env.NEXT_PUBLIC_URL}/pricing`,\n        client_reference_id: userId.toString(),\n    });\n\n    redirect(session.url!);\n}\n\nexport async function createBillingPortalSession() {\n    const { userId } = await auth();\n    if (!userId) {\n        return false\n    }\n    const subscription = await db.stripeSubscription.findUnique({\n        where: { userId: userId },\n    });\n    if (!subscription?.customerId) {\n        throw new Error('Subscription not found');\n    }\n    const session = await stripe.billingPortal.sessions.create({\n        customer: subscription.customerId,\n        return_url: `${process.env.NEXT_PUBLIC_URL}/pricing`,\n    });\n    redirect(session.url!)\n}\n\nexport async function getSubscriptionStatus() {\n    const { userId } = await auth();\n    if (!userId) {\n        return false\n    }\n    const subscription = await db.stripeSubscription.findUnique({\n        where: { userId: userId },\n    });\n    if (!subscription) {\n        return false;\n    }\n    return subscription.currentPeriodEnd > new Date();\n}\n\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;;;AAEO,eAAe,uCAAmB,GAAnB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAE5B,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClD,sBAAsB;YAAC;SAAO;QAC9B,YAAY;YACR;gBACI,OAAO,QAAQ,GAAG,CAAC,eAAe;gBAClC,UAAU;YACd;SACH;QACD,MAAM;QACN,aAAa,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC;QAClD,YAAY,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;QACpD,qBAAqB,OAAO,QAAQ;IACxC;IAEA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG;AACxB;AAEO,eAAe,uCAAwB,GAAxB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,MAAM,eAAe,MAAM,mHAAA,CAAA,KAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACxD,OAAO;YAAE,QAAQ;QAAO;IAC5B;IACA,IAAI,CAAC,cAAc,YAAY;QAC3B,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,UAAU,MAAM,oHAAA,CAAA,SAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC;QACvD,UAAU,aAAa,UAAU;QACjC,YAAY,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;IACxD;IACA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG;AACxB;AAEO,eAAe,uCAAmB,GAAnB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,MAAM,eAAe,MAAM,mHAAA,CAAA,KAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACxD,OAAO;YAAE,QAAQ;QAAO;IAC5B;IACA,IAAI,CAAC,cAAc;QACf,OAAO;IACX;IACA,OAAO,aAAa,gBAAgB,GAAG,IAAI;AAC/C;;;IAtDsB;IAwBA;IAkBA;;AA1CA,+OAAA;AAwBA,+OAAA;AAkBA,+OAAA","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/constants.ts"],"sourcesContent":["export const FREE_CREDITS_PER_DAY = 15\nexport const FREE_ACCOUNTS_PER_USER = 1\nexport const PRO_ACCOUNTS_PER_USER = 3"],"names":[],"mappings":";;;;;AAAO,MAAM,uBAAuB;AAC7B,MAAM,yBAAyB;AAC/B,MAAM,wBAAwB","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/lib/aurinko.ts"],"sourcesContent":["'use server'\nimport axios from 'axios'\nimport type { EmailMessage } from './types';\nimport { auth } from '@clerk/nextjs/server';\nimport { getSubscriptionStatus } from './stripe-actions';\nimport { db } from '@/server/db';\nimport { FREE_ACCOUNTS_PER_USER, PRO_ACCOUNTS_PER_USER } from '@/app/constants';\n\nexport const getAurinkoAuthorizationUrl = async (serviceType: 'Google' | 'Office365') => {\n    const { userId } = await auth()\n    if (!userId) throw new Error('User not found')\n\n    const user = await db.user.findUnique({\n        where: {\n            id: userId\n        }, select: { role: true }\n    })\n\n    if (!user) throw new Error('User not found')\n\n    const isSubscribed = await getSubscriptionStatus()\n\n    const accounts = await db.account.count({\n        where: { userId }\n    })\n\n    if (user.role === 'user') {\n        if (isSubscribed) {\n            if (accounts >= PRO_ACCOUNTS_PER_USER) {\n                throw new Error('You have reached the maximum number of accounts for your subscription')\n            }\n        } else {\n            if (accounts >= FREE_ACCOUNTS_PER_USER) {\n                throw new Error('You have reached the maximum number of accounts for your subscription')\n            }\n        }\n    }\n\n\n    const params = new URLSearchParams({\n        clientId: process.env.AURINKO_CLIENT_ID as string,\n        serviceType,\n        scopes: 'Mail.Read Mail.ReadWrite Mail.Send Mail.Drafts Mail.All',\n        responseType: 'code',\n        returnUrl: `${process.env.NEXT_PUBLIC_URL}/api/aurinko/callback`,\n    });\n\n    return `https://api.aurinko.io/v1/auth/authorize?${params.toString()}`;\n};\n\n\nexport const getAurinkoToken = async (code: string) => {\n    try {\n        const response = await axios.post(`https://api.aurinko.io/v1/auth/token/${code}`,\n            {},\n            {\n                auth: {\n                    username: process.env.AURINKO_CLIENT_ID as string,\n                    password: process.env.AURINKO_CLIENT_SECRET as string,\n                }\n            }\n        );\n\n        return response.data as {\n            accountId: number,\n            accessToken: string,\n            userId: string,\n            userSession: string\n        }\n    } catch (error) {\n        if (axios.isAxiosError(error)) {\n            console.error('Error fetching Aurinko token:', error.response?.data);\n        } else {\n            console.error('Unexpected error fetching Aurinko token:', error);\n        }\n    }\n}\n\nexport const getAccountDetails = async (accessToken: string) => {\n    try {\n        const response = await axios.get('https://api.aurinko.io/v1/account', {\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        return response.data as {\n            email: string,\n            name: string\n        };\n    } catch (error) {\n        if (axios.isAxiosError(error)) {\n            console.error('Error fetching account details:', error.response?.data);\n        } else {\n            console.error('Unexpected error fetching account details:', error);\n        }\n        throw error;\n    }\n}\n\nexport const getEmailDetails = async (accessToken: string, emailId: string) => {\n    try {\n        const response = await axios.get<EmailMessage>(`https://api.aurinko.io/v1/email/messages/${emailId}`, {\n            params: {\n                loadInlines: true\n            },\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        return response.data\n    } catch (error) {\n        if (axios.isAxiosError(error)) {\n            console.error('Error fetching email details:', error.response?.data);\n        } else {\n            console.error('Unexpected error fetching email details:', error);\n        }\n        throw error;\n    }\n}"],"names":[],"mappings":";;;;;;;;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,uCAAwB,GAAxB,6BAA6B,OAAO;IAC7C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAE7B,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QAClC,OAAO;YACH,IAAI;QACR;QAAG,QAAQ;YAAE,MAAM;QAAK;IAC5B;IAEA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,MAAM,eAAe,MAAM,CAAA,GAAA,+HAAA,CAAA,wBAAqB,AAAD;IAE/C,MAAM,WAAW,MAAM,mHAAA,CAAA,KAAE,CAAC,OAAO,CAAC,KAAK,CAAC;QACpC,OAAO;YAAE;QAAO;IACpB;IAEA,IAAI,KAAK,IAAI,KAAK,QAAQ;QACtB,IAAI,cAAc;YACd,IAAI,YAAY,uHAAA,CAAA,wBAAqB,EAAE;gBACnC,MAAM,IAAI,MAAM;YACpB;QACJ,OAAO;YACH,IAAI,YAAY,uHAAA,CAAA,yBAAsB,EAAE;gBACpC,MAAM,IAAI,MAAM;YACpB;QACJ;IACJ;IAGA,MAAM,SAAS,IAAI,gBAAgB;QAC/B,UAAU,QAAQ,GAAG,CAAC,iBAAiB;QACvC;QACA,QAAQ;QACR,cAAc;QACd,WAAW,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,qBAAqB,CAAC;IACpE;IAEA,OAAO,CAAC,yCAAyC,EAAE,OAAO,QAAQ,IAAI;AAC1E;AAGO,MAAM,uCAAa,GAAb,kBAAkB,OAAO;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,qCAAqC,EAAE,MAAM,EAC5E,CAAC,GACD;YACI,MAAM;gBACF,UAAU,QAAQ,GAAG,CAAC,iBAAiB;gBACvC,UAAU,QAAQ,GAAG,CAAC,qBAAqB;YAC/C;QACJ;QAGJ,OAAO,SAAS,IAAI;IAMxB,EAAE,OAAO,OAAO;QACZ,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC3B,QAAQ,KAAK,CAAC,iCAAiC,MAAM,QAAQ,EAAE;QACnE,OAAO;YACH,QAAQ,KAAK,CAAC,4CAA4C;QAC9D;IACJ;AACJ;AAEO,MAAM,uCAAe,GAAf,oBAAoB,OAAO;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,qCAAqC;YAClE,SAAS;gBACL,iBAAiB,CAAC,OAAO,EAAE,aAAa;YAC5C;QACJ;QACA,OAAO,SAAS,IAAI;IAIxB,EAAE,OAAO,OAAO;QACZ,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC3B,QAAQ,KAAK,CAAC,mCAAmC,MAAM,QAAQ,EAAE;QACrE,OAAO;YACH,QAAQ,KAAK,CAAC,8CAA8C;QAChE;QACA,MAAM;IACV;AACJ;AAEO,MAAM,uCAAa,GAAb,kBAAkB,OAAO,aAAqB;IACvD,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAe,CAAC,yCAAyC,EAAE,SAAS,EAAE;YAClG,QAAQ;gBACJ,aAAa;YACjB;YACA,SAAS;gBACL,iBAAiB,CAAC,OAAO,EAAE,aAAa;YAC5C;QACJ;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC3B,QAAQ,KAAK,CAAC,iCAAiC,MAAM,QAAQ,EAAE;QACnE,OAAO;YACH,QAAQ,KAAK,CAAC,4CAA4C;QAC9D;QACA,MAAM;IACV;AACJ;;;IA9Ga;IA2CA;IA2BA;IAqBA;;AA3FA,+OAAA;AA2CA,+OAAA;AA2BA,+OAAA;AAqBA,+OAAA","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/mail/client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mail/client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mail/client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/mail/client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mail/client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mail/client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuQ,GACpS,qCACA","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/components/authorise-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/authorise-button.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/authorise-button.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/components/authorise-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/authorise-button.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/authorise-button.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/mail/page.tsx"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport MailClient from \"@/app/mail/client\";\nimport AuthoriseButton from \"@/components/authorise-button\";\n\nexport const metadata = {\n  title: \"Mail - Lumi\",\n  description: \"Example mail app built with shadcn/ui components\",\n};\n\nexport default async function MailPage() {\n  // Read cookies on the server side\n  const layout = await cookies().get(\"react-resizable-panels:layout:mail\");\n  const collapsed = await cookies().get(\"react-resizable-panels:collapsed\");\n\n  // Parse the layout from cookies\n  let defaultLayout = undefined;\n  try {\n    if (layout?.value) {\n      defaultLayout = JSON.parse(layout.value);\n    }\n  } catch (e) {\n    console.error(\"Failed to parse layout from cookies\", e);\n  }\n\n  // Parse collapsed state\n  const defaultCollapsed = collapsed ? JSON.parse(collapsed.value) : undefined;\n\n  return (\n    <div className=\"relative flex h-screen w-screen flex-col\">\n      <div className=\"hidden h-full w-full flex-1 md:flex\">\n        <MailClient\n          defaultLayout={defaultLayout}\n          defaultCollapsed={defaultCollapsed}\n        />\n      </div>\n      <div className=\"block p-4 text-center md:hidden\">\n        <p>Mail interface not available on mobile devices.</p>\n      </div>\n\n      <div className=\"absolute bottom-4 left-4 z-10\">\n        <AuthoriseButton />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,eAAe;IAC5B,kCAAkC;IAClC,MAAM,SAAS,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC;IACnC,MAAM,YAAY,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC;IAEtC,gCAAgC;IAChC,IAAI,gBAAgB;IACpB,IAAI;QACF,IAAI,QAAQ,OAAO;YACjB,gBAAgB,KAAK,KAAK,CAAC,OAAO,KAAK;QACzC;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,uCAAuC;IACvD;IAEA,wBAAwB;IACxB,MAAM,mBAAmB,YAAY,KAAK,KAAK,CAAC,UAAU,KAAK,IAAI;IAEnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAU;oBACT,eAAe;oBACf,kBAAkB;;;;;;;;;;;0BAGtB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;8BAAE;;;;;;;;;;;0BAGL,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,yIAAA,CAAA,UAAe;;;;;;;;;;;;;;;;AAIxB","debugId":null}}]
}