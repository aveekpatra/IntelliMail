{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/state/dist/index.js"],"sourcesContent":["// state/index.ts\nexport * from \"prosemirror-state\";\n"],"names":[],"mappings":"AAAA,iBAAiB"}},
    {"offset": {"line": 8, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/view/dist/index.js"],"sourcesContent":["// view/index.ts\nexport * from \"prosemirror-view\";\n"],"names":[],"mappings":"AAAA,gBAAgB"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/keymap/dist/index.js"],"sourcesContent":["// keymap/index.ts\nexport * from \"prosemirror-keymap\";\n"],"names":[],"mappings":"AAAA,kBAAkB"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/model/dist/index.js"],"sourcesContent":["// model/index.ts\nexport * from \"prosemirror-model\";\n"],"names":[],"mappings":"AAAA,iBAAiB"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/transform/dist/index.js"],"sourcesContent":["// transform/index.ts\nexport * from \"prosemirror-transform\";\n"],"names":[],"mappings":"AAAA,qBAAqB"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/commands/dist/index.js"],"sourcesContent":["// commands/index.ts\nexport * from \"prosemirror-commands\";\n"],"names":[],"mappings":"AAAA,oBAAoB"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/schema-list/dist/index.js"],"sourcesContent":["// schema-list/index.ts\nexport * from \"prosemirror-schema-list\";\n"],"names":[],"mappings":"AAAA,uBAAuB"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/dropcursor/dist/index.js"],"sourcesContent":["// dropcursor/index.ts\nexport * from \"prosemirror-dropcursor\";\n"],"names":[],"mappings":"AAAA,sBAAsB"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/gapcursor/dist/index.js"],"sourcesContent":["// gapcursor/index.ts\nexport * from \"prosemirror-gapcursor\";\n"],"names":[],"mappings":"AAAA,qBAAqB"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/pm/history/dist/index.js"],"sourcesContent":["// history/index.ts\nexport * from \"prosemirror-history\";\n"],"names":[],"mappings":"AAAA,mBAAmB"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-bubble-menu/src/bubble-menu-plugin.ts","/turbopack/[project]/node_modules/@tiptap/extension-bubble-menu/src/bubble-menu.ts"],"sourcesContent":["import {\n  Editor, isNodeSelection, isTextSelection, posToDOMRect,\n} from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  /**\n   * The plugin key.\n   * @type {PluginKey | string}\n   * @default 'bubbleMenu'\n   */\n  pluginKey: PluginKey | string\n\n  /**\n   * The editor instance.\n   */\n  editor: Editor\n\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement\n\n  /**\n   * The options for the tippy.js instance.\n   * @see https://atomiks.github.io/tippyjs/v6/all-props/\n   */\n  tippyOptions?: Partial<Props>\n\n  /**\n   * The delay in milliseconds before the menu should be updated.\n   * This can be useful to prevent performance issues.\n   * @type {number}\n   * @default 250\n   */\n  updateDelay?: number\n\n  /**\n   * A function that determines whether the menu should be shown or not.\n   * If this function returns `false`, the menu will be hidden, otherwise it will be shown.\n   */\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        element: HTMLElement\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n        from: number\n        to: number\n      }) => boolean)\n    | null\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public updateDelay: number\n\n  private updateDebounceTimer: number | undefined\n\n  public shouldShow: Exclude<BubbleMenuPluginProps['shouldShow'], null> = ({\n    view,\n    state,\n    from,\n    to,\n  }) => {\n    const { doc, selection } = state\n    const { empty } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock = !doc.textBetween(from, to).length && isTextSelection(state.selection)\n\n    // When clicking on a element inside the bubble menu the editor \"blur\" event\n    // is called and the bubble menu item is focussed. In this case we should\n    // consider the menu as part of the editor and keep showing the menu\n    const isChildOfMenu = this.element.contains(document.activeElement)\n\n    const hasEditorFocus = view.hasFocus() || isChildOfMenu\n\n    if (!hasEditorFocus || empty || isEmptyTextBlock || !this.editor.isEditable) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    updateDelay = 250,\n    shouldShow,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n    this.updateDelay = updateDelay\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.addEventListener('dragstart', this.dragstartHandler)\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  dragstartHandler = () => {\n    this.hide()\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    if (\n      event?.relatedTarget === this.editor.view.dom\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const hasValidSelection = state.selection.from !== state.selection.to\n\n    if (this.updateDelay > 0 && hasValidSelection) {\n      this.handleDebouncedUpdate(view, oldState)\n      return\n    }\n\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    this.updateHandler(view, selectionChanged, docChanged, oldState)\n  }\n\n  handleDebouncedUpdate = (view: EditorView, oldState?: EditorState) => {\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    if (!selectionChanged && !docChanged) {\n      return\n    }\n\n    if (this.updateDebounceTimer) {\n      clearTimeout(this.updateDebounceTimer)\n    }\n\n    this.updateDebounceTimer = window.setTimeout(() => {\n      this.updateHandler(view, selectionChanged, docChanged, oldState)\n    }, this.updateDelay)\n  }\n\n  updateHandler = (view: EditorView, selectionChanged: boolean, docChanged: boolean, oldState?: EditorState) => {\n    const { state, composing } = view\n    const { selection } = state\n\n    const isSame = !selectionChanged && !docChanged\n\n    if (composing || isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    // support for CellSelections\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      element: this.element,\n      view,\n      state,\n      oldState,\n      from,\n      to,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect\n        || (() => {\n          if (isNodeSelection(state.selection)) {\n            let node = view.nodeDOM(from) as HTMLElement\n\n            if (node) {\n              const nodeViewWrapper = node.dataset.nodeViewWrapper ? node : node.querySelector('[data-node-view-wrapper]')\n\n              if (nodeViewWrapper) {\n                node = nodeViewWrapper.firstChild as HTMLElement\n              }\n\n              if (node) {\n                return node.getBoundingClientRect()\n              }\n            }\n          }\n\n          return posToDOMRect(view, from, to)\n        }),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.removeEventListener('dragstart', this.dragstartHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin.js'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement | null,\n}\n\n/**\n * This extension allows you to create a bubble menu.\n * @see https://tiptap.dev/api/extensions/bubble-menu\n */\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'bubbleMenu',\n      updateDelay: undefined,\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        updateDelay: this.options.updateDelay,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-floating-menu/src/floating-menu-plugin.ts","/turbopack/[project]/node_modules/@tiptap/extension-floating-menu/src/floating-menu.ts"],"sourcesContent":["import {\n  Editor, getText, getTextSerializersFromSchema, posToDOMRect,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  /**\n   * The plugin key for the floating menu.\n   * @default 'floatingMenu'\n   */\n  pluginKey: PluginKey | string\n\n  /**\n   * The editor instance.\n   * @default null\n   */\n  editor: Editor\n\n  /**\n   * The DOM element that contains your menu.\n   * @default null\n   */\n  element: HTMLElement\n\n  /**\n   * The options for the tippy instance.\n   * @default {}\n   * @see https://atomiks.github.io/tippyjs/v6/all-props/\n   */\n  tippyOptions?: Partial<Props>\n\n  /**\n   * A function that determines whether the menu should be shown or not.\n   * If this function returns `false`, the menu will be hidden, otherwise it will be shown.\n   * @default null\n   */\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n      }) => boolean)\n    | null\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  /**\n   * The editor view.\n   */\n  view: EditorView\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  private getTextContent(node:ProseMirrorNode) {\n    return getText(node, { textSerializers: getTextSerializersFromSchema(this.editor.schema) })\n  }\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n\n    const isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent && $anchor.parent.childCount === 0 && !this.getTextContent($anchor.parent)\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor, element, view, tippyOptions = {}, shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    if (\n      event?.relatedTarget === this.editor.view.dom\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin.js'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement | null,\n}\n\n/**\n * This extension allows you to create a floating menu.\n * @see https://tiptap.dev/api/extensions/floating-menu\n */\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","/turbopack/[project]/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","/turbopack/[project]/node_modules/node_modules/use-sync-external-store/shim/index.js","/turbopack/[project]/node_modules/@tiptap/react/src/EditorContent.tsx","/turbopack/[project]/node_modules/node_modules/fast-deep-equal/es6/react.js","/turbopack/[project]/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","/turbopack/[project]/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js","/turbopack/[project]/node_modules/node_modules/use-sync-external-store/shim/with-selector.js","/turbopack/[project]/node_modules/@tiptap/react/src/useEditorState.ts","/turbopack/[project]/node_modules/@tiptap/react/src/useEditor.ts","/turbopack/[project]/node_modules/@tiptap/react/src/Context.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/BubbleMenu.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/FloatingMenu.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/useReactNodeView.ts","/turbopack/[project]/node_modules/@tiptap/react/src/NodeViewContent.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/NodeViewWrapper.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/ReactRenderer.tsx","/turbopack/[project]/node_modules/@tiptap/react/src/ReactNodeViewRenderer.tsx"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { Editor } from '@tiptap/core'\nimport React, {\n  ForwardedRef, forwardRef, HTMLProps, LegacyRef, MutableRefObject,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { ContentComponent, EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\n\nconst mergeRefs = <T extends HTMLDivElement>(\n  ...refs: Array<MutableRefObject<T> | LegacyRef<T> | undefined>\n) => {\n  return (node: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        (ref as MutableRefObject<T | null>).current = node\n      }\n    })\n  }\n}\n\n/**\n * This component renders all of the editor's node views.\n */\nconst Portals: React.FC<{ contentComponent: ContentComponent }> = ({\n  contentComponent,\n}) => {\n  // For performance reasons, we render the node view portals on state changes only\n  const renderers = useSyncExternalStore(\n    contentComponent.subscribe,\n    contentComponent.getSnapshot,\n    contentComponent.getServerSnapshot,\n  )\n\n  // This allows us to directly render the portals without any additional wrapper\n  return (\n    <>\n      {Object.values(renderers)}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null;\n  innerRef?: ForwardedRef<HTMLDivElement | null>;\n}\n\nfunction getInstance(): ContentComponent {\n  const subscribers = new Set<() => void>()\n  let renderers: Record<string, React.ReactPortal> = {}\n\n  return {\n    /**\n     * Subscribe to the editor instance's changes.\n     */\n    subscribe(callback: () => void) {\n      subscribers.add(callback)\n      return () => {\n        subscribers.delete(callback)\n      }\n    },\n    getSnapshot() {\n      return renderers\n    },\n    getServerSnapshot() {\n      return renderers\n    },\n    /**\n     * Adds a new NodeView Renderer to the editor.\n     */\n    setRenderer(id: string, renderer: ReactRenderer) {\n      renderers = {\n        ...renderers,\n        [id]: ReactDOM.createPortal(renderer.reactElement, renderer.element, id),\n      }\n\n      subscribers.forEach(subscriber => subscriber())\n    },\n    /**\n     * Removes a NodeView Renderer from the editor.\n     */\n    removeRenderer(id: string) {\n      const nextRenderers = { ...renderers }\n\n      delete nextRenderers[id]\n      renderers = nextRenderers\n      subscribers.forEach(subscriber => subscriber())\n    },\n  }\n}\n\nexport class PureEditorContent extends React.Component<\n  EditorContentProps,\n  { hasContentComponentInitialized: boolean }\n> {\n  editorContentRef: React.RefObject<any>\n\n  initialized: boolean\n\n  unsubscribeToContentComponent?: () => void\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n    this.initialized = false\n\n    this.state = {\n      hasContentComponentInitialized: Boolean((props.editor as EditorWithContentComponent | null)?.contentComponent),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (editor && !editor.isDestroyed && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = getInstance()\n\n      // Has the content component been initialized?\n      if (!this.state.hasContentComponentInitialized) {\n        // Subscribe to the content component\n        this.unsubscribeToContentComponent = editor.contentComponent.subscribe(() => {\n          this.setState(prevState => {\n            if (!prevState.hasContentComponentInitialized) {\n              return {\n                hasContentComponentInitialized: true,\n              }\n            }\n            return prevState\n          })\n\n          // Unsubscribe to previous content component\n          if (this.unsubscribeToContentComponent) {\n            this.unsubscribeToContentComponent()\n          }\n        })\n      }\n\n      editor.createNodeViews()\n\n      this.initialized = true\n    }\n  }\n\n  componentWillUnmount() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (!editor) {\n      return\n    }\n\n    this.initialized = false\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    if (this.unsubscribeToContentComponent) {\n      this.unsubscribeToContentComponent()\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, innerRef, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={mergeRefs(innerRef, this.editorContentRef)} {...rest} />\n        {/* @ts-ignore */}\n        {editor?.contentComponent && <Portals contentComponent={editor.contentComponent} />}\n      </>\n    )\n  }\n}\n\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = forwardRef<HTMLDivElement, EditorContentProps>(\n  (props: Omit<EditorContentProps, 'innerRef'>, ref) => {\n    const key = React.useMemo(() => {\n      return Math.floor(Math.random() * 0xffffffff).toString()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.editor])\n\n    // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n    return React.createElement(PureEditorContent, {\n      key,\n      innerRef: ref,\n      ...props,\n    })\n  },\n)\n\nexport const EditorContent = React.memo(EditorContentWithKey)\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import type { Editor } from '@tiptap/core'\nimport deepEqual from 'fast-deep-equal/es6/react'\nimport {\n  useDebugValue, useEffect, useLayoutEffect, useState,\n} from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport type EditorStateSnapshot<TEditor extends Editor | null = Editor | null> = {\n  editor: TEditor;\n  transactionNumber: number;\n};\n\nexport type UseEditorStateOptions<\n  TSelectorResult,\n  TEditor extends Editor | null = Editor | null,\n> = {\n  /**\n   * The editor instance.\n   */\n  editor: TEditor;\n  /**\n   * A selector function to determine the value to compare for re-rendering.\n   */\n  selector: (context: EditorStateSnapshot<TEditor>) => TSelectorResult;\n  /**\n   * A custom equality function to determine if the editor should re-render.\n   * @default `deepEqual` from `fast-deep-equal`\n   */\n  equalityFn?: (a: TSelectorResult, b: TSelectorResult | null) => boolean;\n};\n\n/**\n * To synchronize the editor instance with the component state,\n * we need to create a separate instance that is not affected by the component re-renders.\n */\nclass EditorStateManager<TEditor extends Editor | null = Editor | null> {\n  private transactionNumber = 0\n\n  private lastTransactionNumber = 0\n\n  private lastSnapshot: EditorStateSnapshot<TEditor>\n\n  private editor: TEditor\n\n  private subscribers = new Set<() => void>()\n\n  constructor(initialEditor: TEditor) {\n    this.editor = initialEditor\n    this.lastSnapshot = { editor: initialEditor, transactionNumber: 0 }\n\n    this.getSnapshot = this.getSnapshot.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.watch = this.watch.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getSnapshot(): EditorStateSnapshot<TEditor> {\n    if (this.transactionNumber === this.lastTransactionNumber) {\n      return this.lastSnapshot\n    }\n    this.lastTransactionNumber = this.transactionNumber\n    this.lastSnapshot = { editor: this.editor, transactionNumber: this.transactionNumber }\n    return this.lastSnapshot\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): EditorStateSnapshot<null> {\n    return { editor: null, transactionNumber: 0 }\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(callback: () => void): () => void {\n    this.subscribers.add(callback)\n    return () => {\n      this.subscribers.delete(callback)\n    }\n  }\n\n  /**\n   * Watch the editor instance for changes.\n   */\n  watch(nextEditor: Editor | null): undefined | (() => void) {\n    this.editor = nextEditor as TEditor\n\n    if (this.editor) {\n      /**\n       * This will force a re-render when the editor state changes.\n       * This is to support things like `editor.can().toggleBold()` in components that `useEditor`.\n       * This could be more efficient, but it's a good trade-off for now.\n       */\n      const fn = () => {\n        this.transactionNumber += 1\n        this.subscribers.forEach(callback => callback())\n      }\n\n      const currentEditor = this.editor\n\n      currentEditor.on('transaction', fn)\n      return () => {\n        currentEditor.off('transaction', fn)\n      }\n    }\n\n    return undefined\n  }\n}\n\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor>\n): TSelectorResult;\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor | null>\n): TSelectorResult | null;\n\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor> | UseEditorStateOptions<TSelectorResult, Editor | null>,\n): TSelectorResult | null {\n  const [editorStateManager] = useState(() => new EditorStateManager(options.editor))\n\n  // Using the `useSyncExternalStore` hook to sync the editor instance with the component state\n  const selectedState = useSyncExternalStoreWithSelector(\n    editorStateManager.subscribe,\n    editorStateManager.getSnapshot,\n    editorStateManager.getServerSnapshot,\n    options.selector as UseEditorStateOptions<TSelectorResult, Editor | null>['selector'],\n    options.equalityFn ?? deepEqual,\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    return editorStateManager.watch(options.editor)\n  }, [options.editor, editorStateManager])\n\n  useDebugValue(selectedState)\n\n  return selectedState\n}\n","import { type EditorOptions, Editor } from '@tiptap/core'\nimport {\n  DependencyList,\n  MutableRefObject,\n  useDebugValue,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { useEditorState } from './useEditorState.js'\n\nconst isDev = process.env.NODE_ENV !== 'production'\nconst isSSR = typeof window === 'undefined'\nconst isNext = isSSR || Boolean(typeof window !== 'undefined' && (window as any).next)\n\n/**\n * The options for the `useEditor` hook.\n */\nexport type UseEditorOptions = Partial<EditorOptions> & {\n  /**\n   * Whether to render the editor on the first render.\n   * If client-side rendering, set this to `true`.\n   * If server-side rendering, set this to `false`.\n   * @default true\n   */\n  immediatelyRender?: boolean;\n  /**\n   * Whether to re-render the editor on each transaction.\n   * This is legacy behavior that will be removed in future versions.\n   * @default true\n   */\n  shouldRerenderOnTransaction?: boolean;\n};\n\n/**\n * This class handles the creation, destruction, and re-creation of the editor instance.\n */\nclass EditorInstanceManager {\n  /**\n   * The current editor instance.\n   */\n  private editor: Editor | null = null\n\n  /**\n   * The most recent options to apply to the editor.\n   */\n  private options: MutableRefObject<UseEditorOptions>\n\n  /**\n   * The subscriptions to notify when the editor instance\n   * has been created or destroyed.\n   */\n  private subscriptions = new Set<() => void>()\n\n  /**\n   * A timeout to destroy the editor if it was not mounted within a time frame.\n   */\n  private scheduledDestructionTimeout: ReturnType<typeof setTimeout> | undefined\n\n  /**\n   * Whether the editor has been mounted.\n   */\n  private isComponentMounted = false\n\n  /**\n   * The most recent dependencies array.\n   */\n  private previousDeps: DependencyList | null = null\n\n  /**\n   * The unique instance ID. This is used to identify the editor instance. And will be re-generated for each new instance.\n   */\n  public instanceId = ''\n\n  constructor(options: MutableRefObject<UseEditorOptions>) {\n    this.options = options\n    this.subscriptions = new Set<() => void>()\n    this.setEditor(this.getInitialEditor())\n    this.scheduleDestroy()\n\n    this.getEditor = this.getEditor.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n    this.refreshEditorInstance = this.refreshEditorInstance.bind(this)\n    this.scheduleDestroy = this.scheduleDestroy.bind(this)\n    this.onRender = this.onRender.bind(this)\n    this.createEditor = this.createEditor.bind(this)\n  }\n\n  private setEditor(editor: Editor | null) {\n    this.editor = editor\n    this.instanceId = Math.random().toString(36).slice(2, 9)\n\n    // Notify all subscribers that the editor instance has been created\n    this.subscriptions.forEach(cb => cb())\n  }\n\n  private getInitialEditor() {\n    if (this.options.current.immediatelyRender === undefined) {\n      if (isSSR || isNext) {\n        // TODO in the next major release, we should throw an error here\n        if (isDev) {\n          /**\n           * Throw an error in development, to make sure the developer is aware that tiptap cannot be SSR'd\n           * and that they need to set `immediatelyRender` to `false` to avoid hydration mismatches.\n           */\n          console.warn(\n            'Tiptap Error: SSR has been detected, please set `immediatelyRender` explicitly to `false` to avoid hydration mismatches.',\n          )\n        }\n\n        // Best faith effort in production, run the code in the legacy mode to avoid hydration mismatches and errors in production\n        return null\n      }\n\n      // Default to immediately rendering when client-side rendering\n      return this.createEditor()\n    }\n\n    if (this.options.current.immediatelyRender && isSSR && isDev) {\n      // Warn in development, to make sure the developer is aware that tiptap cannot be SSR'd, set `immediatelyRender` to `false` to avoid hydration mismatches.\n      throw new Error(\n        'Tiptap Error: SSR has been detected, and `immediatelyRender` has been set to `true` this is an unsupported configuration that may result in errors, explicitly set `immediatelyRender` to `false` to avoid hydration mismatches.',\n      )\n    }\n\n    if (this.options.current.immediatelyRender) {\n      return this.createEditor()\n    }\n\n    return null\n  }\n\n  /**\n   * Create a new editor instance. And attach event listeners.\n   */\n  private createEditor(): Editor {\n    const optionsToApply: Partial<EditorOptions> = {\n      ...this.options.current,\n      // Always call the most recent version of the callback function by default\n      onBeforeCreate: (...args) => this.options.current.onBeforeCreate?.(...args),\n      onBlur: (...args) => this.options.current.onBlur?.(...args),\n      onCreate: (...args) => this.options.current.onCreate?.(...args),\n      onDestroy: (...args) => this.options.current.onDestroy?.(...args),\n      onFocus: (...args) => this.options.current.onFocus?.(...args),\n      onSelectionUpdate: (...args) => this.options.current.onSelectionUpdate?.(...args),\n      onTransaction: (...args) => this.options.current.onTransaction?.(...args),\n      onUpdate: (...args) => this.options.current.onUpdate?.(...args),\n      onContentError: (...args) => this.options.current.onContentError?.(...args),\n      onDrop: (...args) => this.options.current.onDrop?.(...args),\n      onPaste: (...args) => this.options.current.onPaste?.(...args),\n    }\n    const editor = new Editor(optionsToApply)\n\n    // no need to keep track of the event listeners, they will be removed when the editor is destroyed\n\n    return editor\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getEditor(): Editor | null {\n    return this.editor\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): null {\n    return null\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(onStoreChange: () => void) {\n    this.subscriptions.add(onStoreChange)\n\n    return () => {\n      this.subscriptions.delete(onStoreChange)\n    }\n  }\n\n  static compareOptions(a: UseEditorOptions, b: UseEditorOptions) {\n    return (Object.keys(a) as (keyof UseEditorOptions)[]).every(key => {\n      if (['onCreate', 'onBeforeCreate', 'onDestroy', 'onUpdate', 'onTransaction', 'onFocus', 'onBlur', 'onSelectionUpdate', 'onContentError', 'onDrop', 'onPaste'].includes(key)) {\n        // we don't want to compare callbacks, they are always different and only registered once\n        return true\n      }\n\n      // We often encourage putting extensions inlined in the options object, so we will do a slightly deeper comparison here\n      if (key === 'extensions' && a.extensions && b.extensions) {\n        if (a.extensions.length !== b.extensions.length) {\n          return false\n        }\n        return a.extensions.every((extension, index) => {\n          if (extension !== b.extensions?.[index]) {\n            return false\n          }\n          return true\n        })\n      }\n      if (a[key] !== b[key]) {\n        // if any of the options have changed, we should update the editor options\n        return false\n      }\n      return true\n    })\n  }\n\n  /**\n   * On each render, we will create, update, or destroy the editor instance.\n   * @param deps The dependencies to watch for changes\n   * @returns A cleanup function\n   */\n  onRender(deps: DependencyList) {\n    // The returned callback will run on each render\n    return () => {\n      this.isComponentMounted = true\n      // Cleanup any scheduled destructions, since we are currently rendering\n      clearTimeout(this.scheduledDestructionTimeout)\n\n      if (this.editor && !this.editor.isDestroyed && deps.length === 0) {\n        // if the editor does exist & deps are empty, we don't need to re-initialize the editor generally\n        if (!EditorInstanceManager.compareOptions(this.options.current, this.editor.options)) {\n          // But, the options are different, so we need to update the editor options\n          // Still, this is faster than re-creating the editor\n          this.editor.setOptions({\n            ...this.options.current,\n            editable: this.editor.isEditable,\n          })\n        }\n      } else {\n        // When the editor:\n        // - does not yet exist\n        // - is destroyed\n        // - the deps array changes\n        // We need to destroy the editor instance and re-initialize it\n        this.refreshEditorInstance(deps)\n      }\n\n      return () => {\n        this.isComponentMounted = false\n        this.scheduleDestroy()\n      }\n    }\n  }\n\n  /**\n   * Recreate the editor instance if the dependencies have changed.\n   */\n  private refreshEditorInstance(deps: DependencyList) {\n    if (this.editor && !this.editor.isDestroyed) {\n      // Editor instance already exists\n      if (this.previousDeps === null) {\n        // If lastDeps has not yet been initialized, reuse the current editor instance\n        this.previousDeps = deps\n        return\n      }\n      const depsAreEqual = this.previousDeps.length === deps.length\n        && this.previousDeps.every((dep, index) => dep === deps[index])\n\n      if (depsAreEqual) {\n        // deps exist and are equal, no need to recreate\n        return\n      }\n    }\n\n    if (this.editor && !this.editor.isDestroyed) {\n      // Destroy the editor instance if it exists\n      this.editor.destroy()\n    }\n\n    this.setEditor(this.createEditor())\n\n    // Update the lastDeps to the current deps\n    this.previousDeps = deps\n  }\n\n  /**\n   * Schedule the destruction of the editor instance.\n   * This will only destroy the editor if it was not mounted on the next tick.\n   * This is to avoid destroying the editor instance when it's actually still mounted.\n   */\n  private scheduleDestroy() {\n    const currentInstanceId = this.instanceId\n    const currentEditor = this.editor\n\n    // Wait two ticks to see if the component is still mounted\n    this.scheduledDestructionTimeout = setTimeout(() => {\n      if (this.isComponentMounted && this.instanceId === currentInstanceId) {\n        // If still mounted on the following tick, with the same instanceId, do not destroy the editor\n        if (currentEditor) {\n          // just re-apply options as they might have changed\n          currentEditor.setOptions(this.options.current)\n        }\n        return\n      }\n      if (currentEditor && !currentEditor.isDestroyed) {\n        currentEditor.destroy()\n        if (this.instanceId === currentInstanceId) {\n          this.setEditor(null)\n        }\n      }\n      // This allows the effect to run again between ticks\n      // which may save us from having to re-create the editor\n    }, 1)\n  }\n}\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(\n  options: UseEditorOptions & { immediatelyRender: true },\n  deps?: DependencyList\n): Editor;\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(options?: UseEditorOptions, deps?: DependencyList): Editor | null;\n\nexport function useEditor(\n  options: UseEditorOptions = {},\n  deps: DependencyList = [],\n): Editor | null {\n  const mostRecentOptions = useRef(options)\n\n  mostRecentOptions.current = options\n\n  const [instanceManager] = useState(() => new EditorInstanceManager(mostRecentOptions))\n\n  const editor = useSyncExternalStore(\n    instanceManager.subscribe,\n    instanceManager.getEditor,\n    instanceManager.getServerSnapshot,\n  )\n\n  useDebugValue(editor)\n\n  // This effect will handle creating/updating the editor instance\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(instanceManager.onRender(deps))\n\n  // The default behavior is to re-render on each transaction\n  // This is legacy behavior that will be removed in future versions\n  useEditorState({\n    editor,\n    selector: ({ transactionNumber }) => {\n      if (options.shouldRerenderOnTransaction === false) {\n        // This will prevent the editor from re-rendering on each transaction\n        return null\n      }\n\n      // This will avoid re-rendering on the first transaction when `immediatelyRender` is set to `true`\n      if (options.immediatelyRender && transactionNumber === 0) {\n        return 0\n      }\n      return transactionNumber + 1\n    },\n  })\n\n  return editor\n}\n","import { Editor } from '@tiptap/core'\nimport React, {\n  createContext, HTMLAttributes, ReactNode, useContext,\n} from 'react'\n\nimport { EditorContent } from './EditorContent.js'\nimport { useEditor, UseEditorOptions } from './useEditor.js'\n\nexport type EditorContextValue = {\n  editor: Editor | null;\n}\n\nexport const EditorContext = createContext<EditorContextValue>({\n  editor: null,\n})\n\nexport const EditorConsumer = EditorContext.Consumer\n\n/**\n * A hook to get the current editor instance.\n */\nexport const useCurrentEditor = () => useContext(EditorContext)\n\nexport type EditorProviderProps = {\n  children?: ReactNode;\n  slotBefore?: ReactNode;\n  slotAfter?: ReactNode;\n  editorContainerProps?: HTMLAttributes<HTMLDivElement>;\n} & UseEditorOptions\n\n/**\n * This is the provider component for the editor.\n * It allows the editor to be accessible across the entire component tree\n * with `useCurrentEditor`.\n */\nexport function EditorProvider({\n  children, slotAfter, slotBefore, editorContainerProps = {}, ...editorOptions\n}: EditorProviderProps) {\n  const editor = useEditor(editorOptions)\n\n  if (!editor) {\n    return null\n  }\n\n  return (\n    <EditorContext.Provider value={{ editor }}>\n      {slotBefore}\n      <EditorConsumer>\n        {({ editor: currentEditor }) => (\n          <EditorContent editor={currentEditor} {...editorContainerProps} />\n        )}\n      </EditorConsumer>\n      {children}\n      {slotAfter}\n    </EditorContext.Provider>\n  )\n}\n","import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, { useEffect, useState } from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: BubbleMenuPluginProps['editor'] | null;\n  className?: string;\n  children: React.ReactNode;\n  updateDelay?: number;\n};\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu', editor, tippyOptions = {}, updateDelay, shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => { menuEditor.unregisterPlugin(pluginKey) }\n  }, [props.editor, currentEditor, element])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: FloatingMenuPluginProps['editor'] | null;\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => { menuEditor.unregisterPlugin(pluginKey) }\n  }, [\n    props.editor,\n    currentEditor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n","import { Editor } from '@tiptap/core'\nimport React from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { EditorWithContentComponent } from './Editor.js'\n\n/**\n * Check if a component is a class component.\n * @param Component\n * @returns {boolean}\n */\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\n/**\n * Check if a component is a forward ref component.\n * @param Component\n * @returns {boolean}\n */\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof?.toString() === 'Symbol(react.forward_ref)'\n  )\n}\n\nexport interface ReactRendererOptions {\n  /**\n   * The editor instance.\n   * @type {Editor}\n   */\n  editor: Editor,\n\n  /**\n   * The props for the component.\n   * @type {Record<string, any>}\n   * @default {}\n   */\n  props?: Record<string, any>,\n\n  /**\n   * The tag name of the element.\n   * @type {string}\n   * @default 'div'\n   */\n  as?: string,\n\n  /**\n   * The class name of the element.\n   * @type {string}\n   * @default ''\n   * @example 'foo bar'\n   */\n  className?: string,\n}\n\ntype ComponentType<R, P> =\n  React.ComponentClass<P> |\n  React.FunctionComponent<P> |\n  React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<R>>;\n\n/**\n * The ReactRenderer class. It's responsible for rendering React components inside the editor.\n * @example\n * new ReactRenderer(MyComponent, {\n *   editor,\n *   props: {\n *     foo: 'bar',\n *   },\n *   as: 'span',\n * })\n*/\nexport class ReactRenderer<R = unknown, P extends Record<string, any> = object> {\n  id: string\n\n  editor: Editor\n\n  component: any\n\n  element: Element\n\n  props: P\n\n  reactElement: React.ReactNode\n\n  ref: R | null = null\n\n  /**\n   * Immediately creates element and renders the provided React component.\n   */\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as EditorWithContentComponent\n    this.props = props as P\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    if (this.editor.isInitialized) {\n      // On first render, we need to flush the render synchronously\n      // Renders afterwards can be async, but this fixes a cursor positioning issue\n      flushSync(() => {\n        this.render()\n      })\n    } else {\n      this.render()\n    }\n  }\n\n  /**\n   * Render the React component.\n   */\n  render(): void {\n    const Component = this.component\n    const props = this.props\n    const editor = this.editor as EditorWithContentComponent\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      // @ts-ignore This is a hack to make the ref work\n      props.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...props} />\n\n    editor?.contentComponent?.setRenderer(this.id, this)\n  }\n\n  /**\n   * Re-renders the React component with new props.\n   */\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  /**\n   * Destroy the React component.\n   */\n  destroy(): void {\n    const editor = this.editor as EditorWithContentComponent\n\n    editor?.contentComponent?.removeRenderer(this.id)\n  }\n\n  /**\n   * Update the attributes of the element that holds the React component.\n   */\n  updateAttributes(attributes: Record<string, string>): void {\n    Object.keys(attributes).forEach(key => {\n      this.element.setAttribute(key, attributes[key])\n    })\n  }\n}\n","import {\n  DecorationWithType,\n  Editor,\n  getRenderedAttributes,\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n} from '@tiptap/core'\nimport { Node, Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Decoration, DecorationSource, NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\nimport React, { ComponentType } from 'react'\n\nimport { EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\nimport { ReactNodeViewContext, ReactNodeViewContextProps } from './useReactNodeView.js'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  /**\n   * This function is called when the node view is updated.\n   * It allows you to compare the old node with the new node and decide if the component should update.\n   */\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode;\n        oldDecorations: readonly Decoration[];\n        oldInnerDecorations: DecorationSource;\n        newNode: ProseMirrorNode;\n        newDecorations: readonly Decoration[];\n        innerDecorations: DecorationSource;\n        updateProps: () => void;\n      }) => boolean)\n    | null;\n  /**\n   * The tag name of the element wrapping the React component.\n   */\n  as?: string;\n  /**\n   * The class name of the element wrapping the React component.\n   */\n  className?: string;\n  /**\n   * Attributes that should be applied to the element wrapping the React component.\n   * If this is a function, it will be called each time the node view is updated.\n   * If this is an object, it will be applied once when the node view is mounted.\n   */\n  attrs?:\n    | Record<string, string>\n    | ((props: {\n        node: ProseMirrorNode;\n        HTMLAttributes: Record<string, any>;\n      }) => Record<string, string>);\n}\n\nexport class ReactNodeView<\n  Component extends ComponentType<NodeViewProps> = ComponentType<NodeViewProps>,\n  NodeEditor extends Editor = Editor,\n  Options extends ReactNodeViewRendererOptions = ReactNodeViewRendererOptions,\n> extends NodeView<Component, NodeEditor, Options> {\n  /**\n   * The renderer instance.\n   */\n  renderer!: ReactRenderer<unknown, NodeViewProps>\n\n  /**\n   * The element that holds the rich-text content of the node.\n   */\n  contentDOMElement!: HTMLElement | null\n\n  /**\n   * Setup the React component.\n   * Called on initialization.\n   */\n  mount() {\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations as DecorationWithType[],\n      innerDecorations: this.innerDecorations,\n      view: this.view,\n      selected: false,\n      extension: this.extension,\n      HTMLAttributes: this.HTMLAttributes,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    } satisfies NodeViewProps\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const onDragStart = this.onDragStart.bind(this)\n    const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n      if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n        element.appendChild(this.contentDOMElement)\n      }\n    }\n    const context = { onDragStart, nodeViewContentRef }\n    const Component = this.component\n    // For performance reasons, we memoize the provider component\n    // And all of the things it requires are declared outside of the component, so it doesn't need to re-render\n    const ReactNodeViewProvider: React.FunctionComponent<NodeViewProps> = React.memo(\n      componentProps => {\n        return (\n          <ReactNodeViewContext.Provider value={context}>\n            {React.createElement(Component, componentProps)}\n          </ReactNodeViewContext.Provider>\n        )\n      },\n    )\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    if (this.node.isLeaf) {\n      this.contentDOMElement = null\n    } else if (this.options.contentDOMElementTag) {\n      this.contentDOMElement = document.createElement(this.options.contentDOMElementTag)\n    } else {\n      this.contentDOMElement = document.createElement(this.node.isInline ? 'span' : 'div')\n    }\n\n    if (this.contentDOMElement) {\n      this.contentDOMElement.dataset.nodeViewContentReact = ''\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n    })\n\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate)\n    this.updateElementAttributes()\n  }\n\n  /**\n   * Return the DOM element.\n   * This is the element that will be used to display the node view.\n   */\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  /**\n   * Return the content DOM element.\n   * This is the element that will be used to display the rich-text content of the node.\n   */\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  /**\n   * On editor selection update, check if the node is selected.\n   * If it is, call `selectNode`, otherwise call `deselectNode`.\n   */\n  handleSelectionUpdate() {\n    const { from, to } = this.editor.state.selection\n    const pos = this.getPos()\n\n    if (typeof pos !== 'number') {\n      return\n    }\n\n    if (from <= pos && to >= pos + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return\n      }\n\n      this.selectNode()\n    } else {\n      if (!this.renderer.props.selected) {\n        return\n      }\n\n      this.deselectNode()\n    }\n  }\n\n  /**\n   * On update, update the React component.\n   * To prevent unnecessary updates, the `update` option can be used.\n   */\n  update(\n    node: Node,\n    decorations: readonly Decoration[],\n    innerDecorations: DecorationSource,\n  ): boolean {\n    const rerenderComponent = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n      if (typeof this.options.attrs === 'function') {\n        this.updateElementAttributes()\n      }\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n      const oldInnerDecorations = this.innerDecorations\n\n      this.node = node\n      this.decorations = decorations\n      this.innerDecorations = innerDecorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        oldInnerDecorations,\n        innerDecorations,\n        updateProps: () => rerenderComponent({ node, decorations, innerDecorations }),\n      })\n    }\n\n    if (\n      node === this.node\n      && this.decorations === decorations\n      && this.innerDecorations === innerDecorations\n    ) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n    this.innerDecorations = innerDecorations\n\n    rerenderComponent({ node, decorations, innerDecorations })\n\n    return true\n  }\n\n  /**\n   * Select the node.\n   * Add the `selected` prop and the `ProseMirror-selectednode` class.\n   */\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n    this.renderer.element.classList.add('ProseMirror-selectednode')\n  }\n\n  /**\n   * Deselect the node.\n   * Remove the `selected` prop and the `ProseMirror-selectednode` class.\n   */\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n    this.renderer.element.classList.remove('ProseMirror-selectednode')\n  }\n\n  /**\n   * Destroy the React component instance.\n   */\n  destroy() {\n    this.renderer.destroy()\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate)\n    this.contentDOMElement = null\n  }\n\n  /**\n   * Update the attributes of the top-level element that holds the React component.\n   * Applying the attributes defined in the `attrs` option.\n   */\n  updateElementAttributes() {\n    if (this.options.attrs) {\n      let attrsObj: Record<string, string> = {}\n\n      if (typeof this.options.attrs === 'function') {\n        const extensionAttributes = this.editor.extensionManager.attributes\n        const HTMLAttributes = getRenderedAttributes(this.node, extensionAttributes)\n\n        attrsObj = this.options.attrs({ node: this.node, HTMLAttributes })\n      } else {\n        attrsObj = this.options.attrs\n      }\n\n      this.renderer.updateAttributes(attrsObj)\n    }\n  }\n}\n\n/**\n * Create a React node view renderer.\n */\nexport function ReactNodeViewRenderer(\n  component: ComponentType<NodeViewProps>,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as EditorWithContentComponent).contentComponent) {\n      return {} as unknown as ProseMirrorNodeView\n    }\n\n    return new ReactNodeView(component, props, options)\n  }\n}\n"],"names":["require$$0","React","shimModule","require$$1","useSyncExternalStore","withSelectorModule","useSyncExternalStoreWithSelector"],"mappings":"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"}},
    {"offset": {"line": 2149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2154, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-blockquote/src/blockquote.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  /**\n   * HTML attributes to add to the blockquote element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nexport const inputRegex = /^\\s*>\\s$/\n\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AA8BA;;CAEG,GACI,MAAM,aAAa;AAE1B;;;CAGG,GACU,MAAA,aAAa,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAoB;IAEvD,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB,SAAS;IAET,OAAO;IAEP,UAAU;IAEV;QACE,OAAO;YACL;gBAAE,KAAK;YAAY;SACpB;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAc,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGxF;QACE,OAAO;YACL,eAAe,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAChC,OAAO,SAAS,MAAM,CAAC,IAAI,CAAC,IAAI;;YAElC,kBAAkB,IAAM,CAAC,EAAE,QAAQ,EAAE;oBACnC,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;;YAEtC,iBAAiB,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAClC,OAAO,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI;;;;IAKpC;QACE,OAAO;YACL,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB;;;IAI9D;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB;gBAChB,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 2221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2226, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-bold/src/bold.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  /**\n   * HTML attributes to add to the bold element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches bold text via `**` as input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/\n\n/**\n * Matches bold text via `**` while pasting.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g\n\n/**\n * Matches bold text via `__` as input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/\n\n/**\n * Matches bold text via `__` while pasting.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g\n\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight=400',\n        clearMark: mark => mark.type.name === this.name,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;;AAmCA;;CAEG,GACI,MAAM,iBAAiB;AAE9B;;CAEG,GACI,MAAM,iBAAiB;AAE9B;;CAEG,GACI,MAAM,uBAAuB;AAEpC;;CAEG,GACI,MAAM,uBAAuB;AAEpC;;;CAGG,GACU,MAAA,OAAO,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAc;IAC3C,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB;QACE,OAAO;YACL;gBACE,KAAK;YACN;YACD;gBACE,KAAK;gBACL,UAAU,CAAA,OAAS,KAAqB,KAAK,CAAC,UAAU,KAAK,YAAY;YAC1E;YACD;gBACE,OAAO;gBACP,WAAW,CAAA,OAAQ,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;YAChD;YACD;gBACE,OAAO;gBACP,UAAU,CAAA,QAAS,4BAA4B,IAAI,CAAC,UAAoB;YACzE;SACF;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAU,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGpF;QACE,OAAO;YACL,SAAS,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC1B,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;;YAEnC,YAAY,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC7B,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;;YAEtC,WAAW,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC5B,OAAO,SAAS,SAAS,CAAC,IAAI,CAAC,IAAI;;;;IAKzC;QACE,OAAO;YACL,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU;YAC9C,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU;;;IAIlD;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;YAEjB,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;IAGH;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;YAEjB,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 2331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2336, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-bullet-list/src/bullet-list.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nconst ListItemName = 'listItem'\nconst TextStyleName = 'textStyle'\n\nexport interface BulletListOptions {\n  /**\n   * The node name for the list items\n   * @default 'listItem'\n   * @example 'paragraph'\n   */\n  itemTypeName: string,\n\n  /**\n   * HTML attributes to add to the bullet list element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting the list\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting the list\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a bullet list to a dash or asterisk.\n */\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\n/**\n * This extension allows you to create bullet lists.\n * This requires the ListItem extension\n * @see https://tiptap.dev/api/nodes/bullet-list\n * @see https://tiptap.dev/api/nodes/list-item.\n */\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => { return this.editor.getAttributes(TextStyleName) },\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,eAAe;AACrB,MAAM,gBAAgB;AA2CtB;;CAEG,GACI,MAAM,aAAa;AAE1B;;;;;CAKG,GACU,MAAA,aAAa,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAoB;IACvD,MAAM;IAEN;QACE,OAAO;YACL,cAAc;YACd,gBAAgB,CAAA;YAChB,WAAW;YACX,gBAAgB;;;IAIpB,OAAO;IAEP;QACE,OAAO,CAAA,EAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAA,CAAA,CAAG;;IAGxC;QACE,OAAO;YACL;gBAAE,KAAK;YAAI;SACZ;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGhF;QACE,OAAO;YACL,kBAAkB,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;oBAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;wBAC/B,OAAO,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,GAAG;;oBAEtK,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;;;;IAK7F;QACE,OAAO;YACL,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB;;;IAI9D;QACE,IAAI,YAAY,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB;YAChC,MAAM;YACN,MAAM,IAAI,CAAC,IAAI;QAChB;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YACzD,YAAY,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB;gBAC5B,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;gBACf,WAAW,IAAI,CAAC,OAAO,CAAC,SAAS;gBACjC,gBAAgB,IAAI,CAAC,OAAO,CAAC,cAAc;gBAC3C,eAAe;oBAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;gBAAc;gBACtE,QAAQ,IAAI,CAAC,MAAM;YACpB;;QAEH,OAAO;YACL;SACD;;AAEJ"}},
    {"offset": {"line": 2421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2426, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-code/src/code.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  /**\n   * The HTML attributes applied to the code element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Regular expressions to match inline code blocks enclosed in backticks.\n *  It matches:\n *     - An opening backtick, followed by\n *     - Any text that doesn't include a backtick (captured for marking), followed by\n *     - A closing backtick.\n *  This ensures that any text between backticks is formatted as code,\n *  regardless of the surrounding characters (exception being another backtick).\n */\nexport const inputRegex = /(^|[^`])`([^`]+)`(?!`)/\n\n/**\n * Matches inline code while pasting.\n */\nexport const pasteRegex = /(^|[^`])`([^`]+)`(?!`)/g\n\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;AAmCA;;;;;;;;CAQG,GACI,MAAM,aAAa;AAE1B;;CAEG,GACI,MAAM,aAAa;AAE1B;;;CAGG,GACU,MAAA,OAAO,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAc;IAC3C,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB,UAAU;IAEV,MAAM;IAEN,UAAU;IAEV;QACE,OAAO;YACL;gBAAE,KAAK;YAAM;SACd;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAQ,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGlF;QACE,OAAO;YACL,SAAS,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC1B,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;;YAEnC,YAAY,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC7B,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;;YAEtC,WAAW,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC5B,OAAO,SAAS,SAAS,CAAC,IAAI,CAAC,IAAI;;;;IAKzC;QACE,OAAO;YACL,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU;;;IAIlD;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;IAGH;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 2511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-code-block/src/code-block.ts"],"sourcesContent":["import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\nimport {\n  Plugin,\n  PluginKey,\n  Selection,\n  TextSelection,\n} from '@tiptap/pm/state'\n\nexport interface CodeBlockOptions {\n  /**\n   * Adds a prefix to language classes that are applied to code tags.\n   * @default 'language-'\n   */\n  languageClassPrefix: string\n  /**\n   * Define whether the node should be exited on triple enter.\n   * @default true\n   */\n  exitOnTripleEnter: boolean\n  /**\n   * Define whether the node should be exited on arrow down if there is no node after it.\n   * @default true\n   */\n  exitOnArrowDown: boolean\n  /**\n   * The default language.\n   * @default null\n   * @example 'js'\n   */\n  defaultLanguage: string | null | undefined\n  /**\n   * Custom HTML attributes that should be added to the rendered HTML tag.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    codeBlock: {\n      /**\n       * Set a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.setCodeBlock({ language: 'javascript' })\n       */\n      setCodeBlock: (attributes?: { language: string }) => ReturnType\n      /**\n       * Toggle a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.toggleCodeBlock({ language: 'javascript' })\n       */\n      toggleCodeBlock: (attributes?: { language: string }) => ReturnType\n    }\n  }\n}\n\n/**\n * Matches a code block with backticks.\n */\nexport const backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/\n\n/**\n * Matches a code block with tildes.\n */\nexport const tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/\n\n/**\n * This extension allows you to create code blocks.\n * @see https://tiptap.dev/api/nodes/code-block\n */\nexport const CodeBlock = Node.create<CodeBlockOptions>({\n  name: 'codeBlock',\n\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      defaultLanguage: null,\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'text*',\n\n  marks: '',\n\n  group: 'block',\n\n  code: true,\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      language: {\n        default: this.options.defaultLanguage,\n        parseHTML: element => {\n          const { languageClassPrefix } = this.options\n          const classNames = [...(element.firstElementChild?.classList || [])]\n          const languages = classNames\n            .filter(className => className.startsWith(languageClassPrefix))\n            .map(className => className.replace(languageClassPrefix, ''))\n          const language = languages[0]\n\n          if (!language) {\n            return null\n          }\n\n          return language\n        },\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'pre',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      [\n        'code',\n        {\n          class: node.attrs.language\n            ? this.options.languageClassPrefix + node.attrs.language\n            : null,\n        },\n        0,\n      ],\n    ]\n  },\n\n  addCommands() {\n    return {\n      setCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.setNode(this.name, attributes)\n        },\n      toggleCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.toggleNode(this.name, 'paragraph', attributes)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const { empty, $anchor } = this.editor.state.selection\n        const isAtStart = $anchor.pos === 1\n\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false\n        }\n\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes()\n        }\n\n        return false\n      },\n\n      // exit node on triple enter\n      Enter: ({ editor }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n')\n\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false\n        }\n\n        return editor\n          .chain()\n          .command(({ tr }) => {\n            tr.delete($from.pos - 2, $from.pos)\n\n            return true\n          })\n          .exitCode()\n          .run()\n      },\n\n      // exit node on arrow down\n      ArrowDown: ({ editor }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection, doc } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n\n        if (!isAtEnd) {\n          return false\n        }\n\n        const after = $from.after()\n\n        if (after === undefined) {\n          return false\n        }\n\n        const nodeAfter = doc.nodeAt(after)\n\n        if (nodeAfter) {\n          return editor.commands.command(({ tr }) => {\n            tr.setSelection(Selection.near(doc.resolve(after)))\n            return true\n          })\n        }\n\n        return editor.commands.exitCode()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      textblockTypeInputRule({\n        find: backtickInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n      textblockTypeInputRule({\n        find: tildeInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // this plugin creates a code block for pasted content from VS Code\n      // we can also detect the copied code language\n      new Plugin({\n        key: new PluginKey('codeBlockVSCodeHandler'),\n        props: {\n          handlePaste: (view, event) => {\n            if (!event.clipboardData) {\n              return false\n            }\n\n            // don’t create a new code block within code blocks\n            if (this.editor.isActive(this.type.name)) {\n              return false\n            }\n\n            const text = event.clipboardData.getData('text/plain')\n            const vscode = event.clipboardData.getData('vscode-editor-data')\n            const vscodeData = vscode ? JSON.parse(vscode) : undefined\n            const language = vscodeData?.mode\n\n            if (!text || !language) {\n              return false\n            }\n\n            const { tr, schema } = view.state\n\n            // prepare a text node\n            // strip carriage return chars from text pasted as code\n            // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n            const textNode = schema.text(text.replace(/\\r\\n?/g, '\\n'))\n\n            // create a code block with the text node\n            // replace selection with the code block\n            tr.replaceSelectionWith(this.type.create({ language }, textNode))\n\n            if (tr.selection.$from.parent.type !== this.type) {\n              // put cursor inside the newly created code block\n              tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))))\n            }\n\n            // store meta information\n            // this is useful for other plugins that depends on the paste event\n            // like the paste rule plugin\n            tr.setMeta('paste', true)\n\n            view.dispatch(tr)\n\n            return true\n          },\n        },\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2744, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-document/src/document.ts"],"sourcesContent":["import { Node } from '@tiptap/core'\n\n/**\n * The default document node which represents the top level node of the editor.\n * @see https://tiptap.dev/api/nodes/document\n */\nexport const Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+',\n})\n"],"names":[],"mappings":";;;;;;;AAEA;;;CAGG,GACU,MAAA,WAAW,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAClC,MAAM;IACN,SAAS;IACT,SAAS;AACV"}},
    {"offset": {"line": 2761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2766, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-dropcursor/src/dropcursor.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  /**\n   * The color of the drop cursor\n   * @default 'currentColor'\n   * @example 'red'\n   */\n  color: string | undefined,\n\n  /**\n   * The width of the drop cursor\n   * @default 1\n   * @example 2\n  */\n  width: number | undefined,\n\n  /**\n   * The class of the drop cursor\n   * @default undefined\n   * @example 'drop-cursor'\n  */\n  class: string | undefined,\n}\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AA0BA;;;;;CAKG,GACU,MAAA,aAAa,iJAAA,CAAA,YAAS,CAAC,MAAM,CAAoB;IAC5D,MAAM;IAEN;QACE,OAAO;YACL,OAAO;YACP,OAAO;YACP,OAAO;;;IAIX;QACE,OAAO;YACL,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAV,EAAW,IAAI,CAAC,OAAO;SACxB;;AAEJ"}},
    {"offset": {"line": 2798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2803, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-gapcursor/src/gapcursor.ts"],"sourcesContent":["import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * A function to determine whether the gap cursor is allowed at the current position. Must return `true` or `false`.\n     * @default null\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AA0BA;;;;;CAKG,GACU,MAAA,YAAY,iJAAA,CAAA,YAAS,CAAC,MAAM,CAAC;IACxC,MAAM;IAEN;QACE,OAAO;YACL,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAT;SACD;;IAGH,kBAAiB,SAAS;;QACxB,MAAM,UAAU;YACd,MAAM,UAAU,IAAI;YACpB,SAAS,UAAU,OAAO;YAC1B,SAAS,UAAU,OAAO;;QAG5B,OAAO;YACL,gBAAgB,CAAA,KAAA,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAZ,EAAa,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB,WAAW,kBAAkB,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;;;AAG9F"}},
    {"offset": {"line": 2839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2844, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-hard-break/src/hard-break.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  /**\n   * Controls if marks should be kept after being split by a hard break.\n   * @default true\n   * @example false\n   */\n  keepMarks: boolean,\n\n  /**\n   * HTML attributes to add to the hard break element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       * @example editor.commands.setHardBreak()\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  linebreakReplacement: true,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;AA8BA;;;CAGG,GACU,MAAA,YAAY,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAmB;IACrD,MAAM;IAEN;QACE,OAAO;YACL,WAAW;YACX,gBAAgB,CAAA;;;IAIpB,QAAQ;IAER,OAAO;IAEP,YAAY;IAEZ,sBAAsB;IAEtB;QACE,OAAO;YACL;gBAAE,KAAK;YAAI;SACZ;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;SAAgB;;IAG7E;QACE,OAAO;;IAGT;QACE,OAAO;YACL,cAAc,IAAM,CAAC,EACnB,QAAQ,EACR,KAAK,EACL,KAAK,EACL,MAAM,EACP;oBACC,OAAO,SAAS,KAAK,CAAC;wBACpB,IAAM,SAAS,QAAQ;wBACvB,IAAM,SAAS,OAAO,CAAC;gCACrB,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG;gCAEnC,IAAI,UAAU,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oCAC9C,OAAO;;gCAGT,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO;gCAClC,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,gBAAgB;gCACnD,MAAM,QAAQ,eACR,UAAU,GAAG,CAAC,YAAY,IAAI,UAAU,KAAK,CAAC,KAAK;gCAEzD,OAAO,QACJ,aAAa,CAAC;oCAAE,MAAM,IAAI,CAAC,IAAI;gCAAA,GAC/B,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;oCACxB,IAAI,YAAY,SAAS,WAAW;wCAClC,MAAM,gBAAgB,MACnB,MAAM,CAAC,CAAA,OAAQ,gBAAgB,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI;wCAEzD,GAAG,WAAW,CAAC;;oCAGjB,OAAO;gCACT,GACC,GAAG;4BACR;qBACD;;;;IAKP;QACE,OAAO;YACL,aAAa,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;YACpD,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;;;AAG3D"}},
    {"offset": {"line": 2918, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2923, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-heading/src/heading.ts"],"sourcesContent":["import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\n\n/**\n * The heading level options.\n */\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  /**\n   * The available heading levels.\n   * @default [1, 2, 3, 4, 5, 6]\n   * @example [1, 2, 3]\n   */\n  levels: Level[],\n\n  /**\n   * The HTML attributes for a heading node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    heading: {\n      /**\n       * Set a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.setHeading({ level: 1 })\n       */\n      setHeading: (attributes: { level: Level }) => ReturnType,\n      /**\n       * Toggle a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.toggleHeading({ level: 1 })\n       */\n      toggleHeading: (attributes: { level: Level }) => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode(this.name, attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode(this.name, 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{${Math.min(...this.options.levels)},${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level,\n        },\n      })\n    })\n  },\n})\n"],"names":[],"mappings":";;;;;;;AA0CA;;;CAGG,GACU,MAAA,UAAU,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAiB;IACjD,MAAM;IAEN;QACE,OAAO;YACL,QAAQ;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAC1B,gBAAgB,CAAA;;;IAIpB,SAAS;IAET,OAAO;IAEP,UAAU;IAEV;QACE,OAAO;YACL,OAAO;gBACL,SAAS;gBACT,UAAU;YACX;;;IAIL;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAA,CACjB,GAAG,CAAC,CAAC,QAAY,CAAM;gBACtB,KAAK,CAAI,CAAA,EAAA,MAAO,CAAA;gBAChB,OAAO;oBAAE;gBAAK;YACf,CAAA;;IAGL,YAAW,EAAE,IAAI,EAAE,cAAc,EAAE;QACjC,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAC,KAAK;QAC9D,MAAM,QAAQ,WACV,KAAK,KAAK,CAAC,KAAA,GACX,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAE1B,OAAO;YAAC,CAAI,CAAA,EAAA,MAAK,CAAE;YAAE,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGvF;QACE,OAAO;YACL,YAAY,CAAA,aAAc,CAAC,EAAE,QAAQ,EAAE;oBACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,GAAG;wBACnD,OAAO;;oBAGT,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;;YAErC,eAAe,CAAA,aAAc,CAAC,EAAE,QAAQ,EAAE;oBACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,GAAG;wBACnD,OAAO;;oBAGT,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa;;;;IAKzD;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,QAAK,CAAM;gBACnD,GAAG,KAAK;gBACR,GAAG;oBACD,CAAC,CAAA,QAAA,EAAW,MAAK,CAAE,CAAA,EAAG,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;4BAAE;wBAAK;gBACvE,CAAA;aACF,GAAG,CAAA;;IAGN;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;YAC7B,OAAO,CAAA,GAAA,iJAAA,CAAA,yBAAsB,AAAtB,EAAuB;gBAC5B,MAAM,IAAI,OAAO,CAAO,IAAA,EAAA,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAK,CAAA,EAAA,MAAK,MAAA,CAAQ;gBACzE,MAAM,IAAI,CAAC,IAAI;gBACf,eAAe;oBACb;gBACD;YACF;QACH;;AAEH"}},
    {"offset": {"line": 3016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3021, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-history/src/history.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  /**\n   * The amount of history events that are collected before the oldest events are discarded.\n   * @default 100\n   * @example 50\n   */\n  depth: number,\n\n  /**\n   * The delay (in milliseconds) between changes after which a new group should be started.\n   * @default 500\n   * @example 1000\n   */\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       * @example editor.commands.undo()\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       * @example editor.commands.redo()\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Mod-y': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AAoCA;;;;;;;;CAQG,GACU,MAAA,UAAU,iJAAA,CAAA,YAAS,CAAC,MAAM,CAAiB;IACtD,MAAM;IAEN;QACE,OAAO;YACL,OAAO;YACP,eAAe;;;IAInB;QACE,OAAO;YACL,MAAM,IAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAC9B,OAAO,CAAA,GAAA,uJAAA,CAAA,OAAI,AAAJ,EAAK,OAAO;;YAErB,MAAM,IAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAC9B,OAAO,CAAA,GAAA,uJAAA,CAAA,OAAI,AAAJ,EAAK,OAAO;;;;IAKzB;QACE,OAAO;YACL,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAP,EAAQ,IAAI,CAAC,OAAO;SACrB;;IAGH;QACE,OAAO;YACL,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;YACxC,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;YAC9C,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;;YAGxC,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;YACxC,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;;;AAGnD"}},
    {"offset": {"line": 3075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3080, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-horizontal-rule/src/horizontal-rule.ts"],"sourcesContent":["import {\n  isNodeSelection, mergeAttributes, Node, nodeInputRule,\n} from '@tiptap/core'\nimport { NodeSelection, TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  /**\n   * The HTML attributes for a horizontal rule node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       * @example editor.commands.setHorizontalRule()\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\n/**\n * This extension allows you to insert horizontal rules.\n * @see https://www.tiptap.dev/api/nodes/horizontal-rule\n */\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain, state }) => {\n          const { selection } = state\n          const { $from: $originFrom, $to: $originTo } = selection\n\n          const currentChain = chain()\n\n          if ($originFrom.parentOffset === 0) {\n            currentChain.insertContentAt(\n              {\n                from: Math.max($originFrom.pos - 1, 0),\n                to: $originTo.pos,\n              },\n              {\n                type: this.name,\n              },\n            )\n          } else if (isNodeSelection(selection)) {\n            currentChain.insertContentAt($originTo.pos, {\n              type: this.name,\n            })\n          } else {\n            currentChain.insertContent({ type: this.name })\n          }\n\n          return (\n            currentChain\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    if ($to.nodeAfter.isTextblock) {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1))\n                    } else if ($to.nodeAfter.isBlock) {\n                      tr.setSelection(NodeSelection.create(tr.doc, $to.pos))\n                    } else {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                    }\n                  } else {\n                    // add node after horizontal rule if it’s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter + 1))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AA0BA;;;CAGG,GACU,MAAA,iBAAiB,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAwB;IAC/D,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB,OAAO;IAEP;QACE,OAAO;YAAC;gBAAE,KAAK;YAAI;SAAG;;IAGxB,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;SAAgB;;IAG7E;QACE,OAAO;YACL,mBACE,IAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;oBACrB,MAAM,EAAE,SAAS,EAAE,GAAG;oBACtB,MAAM,EAAE,OAAO,WAAW,EAAE,KAAK,SAAS,EAAE,GAAG;oBAE/C,MAAM,eAAe;oBAErB,IAAI,YAAY,YAAY,KAAK,GAAG;wBAClC,aAAa,eAAe,CAC1B;4BACE,MAAM,KAAK,GAAG,CAAC,YAAY,GAAG,GAAG,GAAG;4BACpC,IAAI,UAAU,GAAG;2BAEnB;4BACE,MAAM,IAAI,CAAC,IAAI;wBAChB;2BAEE,IAAI,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,YAAY;wBACrC,aAAa,eAAe,CAAC,UAAU,GAAG,EAAE;4BAC1C,MAAM,IAAI,CAAC,IAAI;wBAChB;2BACI;wBACL,aAAa,aAAa,CAAC;4BAAE,MAAM,IAAI,CAAC,IAAI;wBAAA;;oBAG9C,OACE;qBAEG,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;;wBACxB,IAAI,UAAU;4BACZ,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,SAAS;4BAC5B,MAAM,WAAW,IAAI,GAAG;4BAExB,IAAI,IAAI,SAAS,EAAE;gCACjB,IAAI,IAAI,SAAS,CAAC,WAAW,EAAE;oCAC7B,GAAG,YAAY,CAAC,qJAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG;uCAClD,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE;oCAChC,GAAG,YAAY,CAAC,qJAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,IAAI,GAAG;uCAC/C;oCACL,GAAG,YAAY,CAAC,qJAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,IAAI,GAAG;;mCAEjD;;gCAEL,MAAM,OAAO,CAAA,KAAA,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,MAAE,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,MAAM;gCAE7D,IAAI,MAAM;oCACR,GAAG,MAAM,CAAC,UAAU;oCACpB,GAAG,YAAY,CAAC,qJAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,WAAW;;;4BAI5D,GAAG,cAAc;;wBAGnB,OAAO;oBACT,GACC,GAAG;;;;IAMhB;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 3176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3181, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-italic/src/italic.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  /**\n   * HTML attributes to add to the italic element.\n   * @default {}\n   * @example { class: 'foo' }\n  */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       * @example editor.commands.setItalic()\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       * @example editor.commands.toggleItalic()\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       * @example editor.commands.unsetItalic()\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an italic to a *italic* on input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/\n\n/**\n * Matches an italic to a *italic* on paste.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g\n\n/**\n * Matches an italic to a _italic_ on input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/\n\n/**\n * Matches an italic to a _italic_ on paste.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g\n\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=normal',\n        clearMark: mark => mark.type.name === this.name,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;;AAsCA;;CAEG,GACI,MAAM,iBAAiB;AAE9B;;CAEG,GACI,MAAM,iBAAiB;AAE9B;;CAEG,GACI,MAAM,uBAAuB;AAEpC;;CAEG,GACI,MAAM,uBAAuB;AAEpC;;;CAGG,GACU,MAAA,SAAS,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAgB;IAC/C,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB;QACE,OAAO;YACL;gBACE,KAAK;YACN;YACD;gBACE,KAAK;gBACL,UAAU,CAAA,OAAS,KAAqB,KAAK,CAAC,SAAS,KAAK,YAAY;YACzE;YACD;gBACE,OAAO;gBACP,WAAW,CAAA,OAAQ,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;YAChD;YACD;gBACE,OAAO;YACR;SACF;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGhF;QACE,OAAO;YACL,WAAW,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC5B,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;;YAEnC,cAAc,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC/B,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;;YAEtC,aAAa,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC9B,OAAO,SAAS,SAAS,CAAC,IAAI,CAAC,IAAI;;;;IAKzC;QACE,OAAO;YACL,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;YAChD,SAAS,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;;;IAIpD;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;YAEjB,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;IAGH;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;YAEjB,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 3285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3290, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-list-item/src/list-item.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  /**\n   * The HTML attributes for a list item node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * The node type for bulletList nodes\n   * @default 'bulletList'\n   * @example 'myCustomBulletList'\n   */\n  bulletListTypeName: string\n\n  /**\n   * The node type for orderedList nodes\n   * @default 'orderedList'\n   * @example 'myCustomOrderedList'\n   */\n  orderedListTypeName: string\n}\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;AAyBA;;;CAGG,GACU,MAAA,WAAW,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAkB;IACnD,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;YAChB,oBAAoB;YACpB,qBAAqB;;;IAIzB,SAAS;IAET,UAAU;IAEV;QACE,OAAO;YACL;gBACE,KAAK;YACN;SACF;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAGhF;QACE,OAAO;YACL,OAAO,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;YACzD,KAAK,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI;YACtD,aAAa,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI;;;AAGnE"}},
    {"offset": {"line": 3335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3340, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-ordered-list/src/ordered-list.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nconst ListItemName = 'listItem'\nconst TextStyleName = 'textStyle'\n\nexport interface OrderedListOptions {\n  /**\n   * The node type name for list items.\n   * @default 'listItem'\n   * @example 'myListItem'\n   */\n  itemTypeName: string,\n\n  /**\n   * The HTML attributes for an ordered list node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    orderedList: {\n      /**\n       * Toggle an ordered list\n       * @example editor.commands.toggleOrderedList()\n       */\n      toggleOrderedList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an ordered list to a 1. on input (or any number followed by a dot).\n */\nexport const inputRegex = /^(\\d+)\\.\\s$/\n\n/**\n * This extension allows you to create ordered lists.\n * This requires the ListItem extension\n * @see https://www.tiptap.dev/api/nodes/ordered-list\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const OrderedList = Node.create<OrderedListOptions>({\n  name: 'orderedList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start')\n            ? parseInt(element.getAttribute('start') || '', 10)\n            : 1\n        },\n      },\n      type: {\n        default: null,\n        parseHTML: element => element.getAttribute('type'),\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'ol',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    return start === 1\n      ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n      : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({ start: +match[1] }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyleName) }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,eAAe;AACrB,MAAM,gBAAgB;AA4CtB;;CAEG,GACI,MAAM,aAAa;AAE1B;;;;;CAKG,GACU,MAAA,cAAc,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAqB;IACzD,MAAM;IAEN;QACE,OAAO;YACL,cAAc;YACd,gBAAgB,CAAA;YAChB,WAAW;YACX,gBAAgB;;;IAIpB,OAAO;IAEP;QACE,OAAO,CAAA,EAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAA,CAAA,CAAG;;IAGxC;QACE,OAAO;YACL,OAAO;gBACL,SAAS;gBACT,WAAW,CAAA;oBACT,OAAO,QAAQ,YAAY,CAAC,WACxB,SAAS,QAAQ,YAAY,CAAC,YAAY,IAAI,MAC9C;;YAEP;YACD,MAAM;gBACJ,SAAS;gBACT,WAAW,CAAA,UAAW,QAAQ,YAAY,CAAC;YAC5C;;;IAIL;QACE,OAAO;YACL;gBACE,KAAK;YACN;SACF;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,MAAM,EAAE,KAAK,EAAE,GAAG,wBAAwB,GAAG;QAE7C,OAAO,UAAU,IACb;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAyB;SAAC,GAC9E;YAAC;YAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAG7E;QACE,OAAO;YACL,mBAAmB,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;oBAC3C,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;wBAC/B,OAAO,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,GAAG;;oBAEtK,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;;;;IAK7F;QACE,OAAO;YACL,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB;;;IAI/D;QACE,IAAI,YAAY,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB;YAChC,MAAM;YACN,MAAM,IAAI,CAAC,IAAI;YACf,eAAe,CAAA,QAAK,CAAK;oBAAE,OAAO,CAAC,KAAK,CAAC,EAAE;gBAAA,CAAE;YAC7C,eAAe,CAAC,OAAO,OAAS,KAAK,UAAU,GAAG,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,EAAE;QACjF;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YACzD,YAAY,CAAA,GAAA,iJAAA,CAAA,oBAAiB,AAAjB,EAAkB;gBAC5B,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;gBACf,WAAW,IAAI,CAAC,OAAO,CAAC,SAAS;gBACjC,gBAAgB,IAAI,CAAC,OAAO,CAAC,cAAc;gBAC3C,eAAe,CAAA,QAAK,CAAK;wBAAE,OAAO,CAAC,KAAK,CAAC,EAAE;wBAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc;oBAAA,CAAE;gBAC1F,eAAe,CAAC,OAAO,OAAS,KAAK,UAAU,GAAG,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,EAAE;gBAChF,QAAQ,IAAI,CAAC,MAAM;YACpB;;QAEH,OAAO;YACL;SACD;;AAEJ"}},
    {"offset": {"line": 3450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3455, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-paragraph/src/paragraph.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  /**\n   * The HTML attributes for a paragraph node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       * @example editor.commands.toggleParagraph()\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;AAuBA;;;CAGG,GACU,MAAA,YAAY,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAmB;IACrD,MAAM;IAEN,UAAU;IAEV;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB,OAAO;IAEP,SAAS;IAET;QACE,OAAO;YACL;gBAAE,KAAK;YAAG;SACX;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAK,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAG/E;QACE,OAAO;YACL,cAAc,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC/B,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;;;;IAKvC;QACE,OAAO;YACL,aAAa,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;;;AAGzD"}},
    {"offset": {"line": 3504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3509, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-strike/src/strike.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  /**\n   * HTML attributes to add to the strike element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       * @example editor.commands.setStrike()\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       * @example editor.commands.toggleStrike()\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       * @example editor.commands.unsetStrike()\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nexport const inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/\n\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nexport const pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g\n\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;AAsCA;;CAEG,GACI,MAAM,aAAa;AAE1B;;CAEG,GACI,MAAM,aAAa;AAE1B;;;CAGG,GACU,MAAA,SAAS,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAgB;IAC/C,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB,CAAA;;;IAIpB;QACE,OAAO;YACL;gBACE,KAAK;YACN;YACD;gBACE,KAAK;YACN;YACD;gBACE,KAAK;YACN;YACD;gBACE,OAAO;gBACP,WAAW;gBACX,UAAU,CAAA,QAAW,MAAiB,QAAQ,CAAC,kBAAkB,CAAA,IAAK;YACvE;SACF;;IAGH,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YAAC;YAAK,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAf,EAAgB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAAiB;SAAE;;IAG/E;QACE,OAAO;YACL,WAAW,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC5B,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;;YAEnC,cAAc,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC/B,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;;YAEtC,aAAa,IAAM,CAAC,EAAE,QAAQ,EAAE;oBAC9B,OAAO,SAAS,SAAS,CAAC,IAAI,CAAC,IAAI;;;;IAKzC;QACE,OAAO;YACL,eAAe,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY;;;IAI1D;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;IAGH;QACE,OAAO;YACL,CAAA,GAAA,iJAAA,CAAA,gBAAa,AAAb,EAAc;gBACZ,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;;SAElB;;AAEJ"}},
    {"offset": {"line": 3596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3601, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/extension-text/src/text.ts"],"sourcesContent":["import { Node } from '@tiptap/core'\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n"],"names":[],"mappings":";;;;;;;AAEA;;;CAGG,GACU,MAAA,OAAO,iJAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAC9B,MAAM;IACN,OAAO;AACR"}},
    {"offset": {"line": 3617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3622, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@tiptap/starter-kit/src/starter-kit.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { Blockquote, BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport { Bold, BoldOptions } from '@tiptap/extension-bold'\nimport { BulletList, BulletListOptions } from '@tiptap/extension-bullet-list'\nimport { Code, CodeOptions } from '@tiptap/extension-code'\nimport { CodeBlock, CodeBlockOptions } from '@tiptap/extension-code-block'\nimport { Document } from '@tiptap/extension-document'\nimport { Dropcursor, DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport { Gapcursor } from '@tiptap/extension-gapcursor'\nimport { HardBreak, HardBreakOptions } from '@tiptap/extension-hard-break'\nimport { Heading, HeadingOptions } from '@tiptap/extension-heading'\nimport { History, HistoryOptions } from '@tiptap/extension-history'\nimport { HorizontalRule, HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport { Italic, ItalicOptions } from '@tiptap/extension-italic'\nimport { ListItem, ListItemOptions } from '@tiptap/extension-list-item'\nimport { OrderedList, OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport { Paragraph, ParagraphOptions } from '@tiptap/extension-paragraph'\nimport { Strike, StrikeOptions } from '@tiptap/extension-strike'\nimport { Text } from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  /**\n   * If set to false, the blockquote extension will not be registered\n   * @example blockquote: false\n   */\n  blockquote: Partial<BlockquoteOptions> | false,\n\n  /**\n   * If set to false, the bold extension will not be registered\n   * @example bold: false\n   */\n  bold: Partial<BoldOptions> | false,\n\n  /**\n   * If set to false, the bulletList extension will not be registered\n   * @example bulletList: false\n   */\n  bulletList: Partial<BulletListOptions> | false,\n\n  /**\n   * If set to false, the code extension will not be registered\n   * @example code: false\n   */\n  code: Partial<CodeOptions> | false,\n\n  /**\n   * If set to false, the codeBlock extension will not be registered\n   * @example codeBlock: false\n   */\n  codeBlock: Partial<CodeBlockOptions> | false,\n\n  /**\n   * If set to false, the document extension will not be registered\n   * @example document: false\n   */\n  document: false,\n\n  /**\n   * If set to false, the dropcursor extension will not be registered\n   * @example dropcursor: false\n   */\n  dropcursor: Partial<DropcursorOptions> | false,\n\n  /**\n   * If set to false, the gapcursor extension will not be registered\n   * @example gapcursor: false\n   */\n  gapcursor: false,\n\n  /**\n   * If set to false, the hardBreak extension will not be registered\n   * @example hardBreak: false\n   */\n  hardBreak: Partial<HardBreakOptions> | false,\n\n  /**\n   * If set to false, the heading extension will not be registered\n   * @example heading: false\n   */\n  heading: Partial<HeadingOptions> | false,\n\n  /**\n   * If set to false, the history extension will not be registered\n   * @example history: false\n   */\n  history: Partial<HistoryOptions> | false,\n\n  /**\n   * If set to false, the horizontalRule extension will not be registered\n   * @example horizontalRule: false\n   */\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n\n  /**\n   * If set to false, the italic extension will not be registered\n   * @example italic: false\n   */\n  italic: Partial<ItalicOptions> | false,\n\n  /**\n   * If set to false, the listItem extension will not be registered\n   * @example listItem: false\n   */\n  listItem: Partial<ListItemOptions> | false,\n\n  /**\n   * If set to false, the orderedList extension will not be registered\n   * @example orderedList: false\n   */\n  orderedList: Partial<OrderedListOptions> | false,\n\n  /**\n   * If set to false, the paragraph extension will not be registered\n   * @example paragraph: false\n   */\n  paragraph: Partial<ParagraphOptions> | false,\n\n  /**\n   * If set to false, the strike extension will not be registered\n   * @example strike: false\n   */\n  strike: Partial<StrikeOptions> | false,\n\n  /**\n   * If set to false, the text extension will not be registered\n   * @example text: false\n   */\n  text: false,\n}\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options.bold))\n    }\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options.blockquote))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options.text))\n    }\n\n    return extensions\n  },\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}