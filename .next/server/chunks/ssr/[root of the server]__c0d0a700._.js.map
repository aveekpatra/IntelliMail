{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/lib/stripe.ts"],"sourcesContent":["'server-only'\nimport Stripe from 'stripe'\n\nexport const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n    apiVersion: '2024-06-20',\n})\n\n"],"names":[],"mappings":";;;AACA;AADA;;AAGO,MAAM,SAAS,IAAI,sJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IAC7D,YAAY;AAChB","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    // NEXT_PUBLIC_CLIENTVAR: process.env.NEXT_PUBLIC_CLIENTVAR,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,oIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IAEV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"@/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;SAAO,GAAG;YAAC;SAAQ;IAClE;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/lib/stripe-actions.ts"],"sourcesContent":["'use server'\n\nimport { auth } from \"@clerk/nextjs/server\";\nimport { stripe } from \"./stripe\";\nimport { redirect } from \"next/navigation\";\nimport { db } from \"@/server/db\";\n\nexport async function createCheckoutSession() {\n    const { userId } = await auth();\n\n    if (!userId) {\n        throw new Error('User not found');\n    }\n\n    const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        line_items: [\n            {\n                price: process.env.STRIPE_PRICE_ID,\n                quantity: 1,\n            },\n        ],\n        mode: 'subscription',\n        success_url: `${process.env.NEXT_PUBLIC_URL}/mail`,\n        cancel_url: `${process.env.NEXT_PUBLIC_URL}/pricing`,\n        client_reference_id: userId.toString(),\n    });\n\n    redirect(session.url!);\n}\n\nexport async function createBillingPortalSession() {\n    const { userId } = await auth();\n    if (!userId) {\n        return false\n    }\n    const subscription = await db.stripeSubscription.findUnique({\n        where: { userId: userId },\n    });\n    if (!subscription?.customerId) {\n        throw new Error('Subscription not found');\n    }\n    const session = await stripe.billingPortal.sessions.create({\n        customer: subscription.customerId,\n        return_url: `${process.env.NEXT_PUBLIC_URL}/pricing`,\n    });\n    redirect(session.url!)\n}\n\nexport async function getSubscriptionStatus() {\n    const { userId } = await auth();\n    if (!userId) {\n        return false\n    }\n    const subscription = await db.stripeSubscription.findUnique({\n        where: { userId: userId },\n    });\n    if (!subscription) {\n        return false;\n    }\n    return subscription.currentPeriodEnd > new Date();\n}\n\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;;;AAEO,eAAe,uCAAmB,GAAnB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAE5B,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClD,sBAAsB;YAAC;SAAO;QAC9B,YAAY;YACR;gBACI,OAAO,QAAQ,GAAG,CAAC,eAAe;gBAClC,UAAU;YACd;SACH;QACD,MAAM;QACN,aAAa,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC;QAClD,YAAY,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;QACpD,qBAAqB,OAAO,QAAQ;IACxC;IAEA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG;AACxB;AAEO,eAAe,uCAAwB,GAAxB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,MAAM,eAAe,MAAM,mHAAA,CAAA,KAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACxD,OAAO;YAAE,QAAQ;QAAO;IAC5B;IACA,IAAI,CAAC,cAAc,YAAY;QAC3B,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,UAAU,MAAM,oHAAA,CAAA,SAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC;QACvD,UAAU,aAAa,UAAU;QACjC,YAAY,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;IACxD;IACA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG;AACxB;AAEO,eAAe,uCAAmB,GAAnB;IAClB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,MAAM,eAAe,MAAM,mHAAA,CAAA,KAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACxD,OAAO;YAAE,QAAQ;QAAO;IAC5B;IACA,IAAI,CAAC,cAAc;QACf,OAAO;IACX;IACA,OAAO,aAAa,gBAAgB,GAAG,IAAI;AAC/C;;;IAtDsB;IAwBA;IAkBA;;AA1CA,+OAAA;AAwBA,+OAAA;AAkBA,+OAAA","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/settings/accounts/manage-accounts.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/settings/accounts/manage-accounts.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/settings/accounts/manage-accounts.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwT,GACrV,sFACA","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/settings/accounts/manage-accounts.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/settings/accounts/manage-accounts.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/settings/accounts/manage-accounts.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/mail/components/gmail-status.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/mail/components/gmail-status.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/mail/components/gmail-status.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/mail/components/gmail-status.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/mail/components/gmail-status.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/mail/components/gmail-status.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/mail/components/gmail-emails.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/mail/components/gmail-emails.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/mail/components/gmail-emails.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/mail/components/gmail-emails.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(auth)/mail/components/gmail-emails.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(auth)/mail/components/gmail-emails.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/constants.ts"],"sourcesContent":["export const FREE_CREDITS_PER_DAY = 15\nexport const FREE_ACCOUNTS_PER_USER = 1\nexport const PRO_ACCOUNTS_PER_USER = 3"],"names":[],"mappings":";;;;;AAAO,MAAM,uBAAuB;AAC7B,MAAM,yBAAyB;AAC/B,MAAM,wBAAwB","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///Users/aveekpatra/Coding/lumi/src/app/%28auth%29/settings/accounts/page.tsx"],"sourcesContent":["import ManageAccounts from \"./manage-accounts\";\nimport GmailStatus from \"../../mail/components/gmail-status\";\nimport GmailEmails from \"../../mail/components/gmail-emails\";\nimport { getSubscriptionStatus } from \"@/lib/stripe-actions\";\nimport { FREE_ACCOUNTS_PER_USER, PRO_ACCOUNTS_PER_USER } from \"@/app/constants\";\n\nexport const metadata = {\n  title: \"Manage Accounts - Lumi\",\n  description: \"Manage your connected email accounts\",\n};\n\nexport default async function AccountsPage() {\n  const isSubscribed = await getSubscriptionStatus();\n  const maxAccounts = isSubscribed\n    ? PRO_ACCOUNTS_PER_USER\n    : FREE_ACCOUNTS_PER_USER;\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <h1 className=\"mb-8 text-3xl font-bold\">Manage Connected Accounts</h1>\n      <div className=\"mb-6 rounded-lg bg-blue-50 p-4 dark:bg-blue-950\">\n        <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n          Your plan allows up to{\" \"}\n          <span className=\"font-bold\">{maxAccounts}</span> connected{\" \"}\n          {maxAccounts === 1 ? \"account\" : \"accounts\"}.\n          {!isSubscribed && (\n            <span>\n              {\" \"}\n              Upgrade to Pro for up to {PRO_ACCOUNTS_PER_USER} accounts.\n            </span>\n          )}\n        </p>\n      </div>\n\n      {/* Debug section to check Gmail status */}\n      <div className=\"mb-8\">\n        <h2 className=\"mb-4 text-xl font-semibold\">Gmail Connection Status</h2>\n        <GmailStatus />\n      </div>\n\n      {/* Display Gmail emails */}\n      <div className=\"mb-8\">\n        <h2 className=\"mb-4 text-xl font-semibold\">Your Gmail Inbox</h2>\n        <GmailEmails />\n      </div>\n\n      <ManageAccounts maxAccounts={maxAccounts} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,eAAe;IAC5B,MAAM,eAAe,MAAM,CAAA,GAAA,+HAAA,CAAA,wBAAqB,AAAD;IAC/C,MAAM,cAAc,eAChB,uHAAA,CAAA,wBAAqB,GACrB,uHAAA,CAAA,yBAAsB;IAE1B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;;wBAA2C;wBAC/B;sCACvB,8OAAC;4BAAK,WAAU;sCAAa;;;;;;wBAAmB;wBAAW;wBAC1D,gBAAgB,IAAI,YAAY;wBAAW;wBAC3C,CAAC,8BACA,8OAAC;;gCACE;gCAAI;gCACqB,uHAAA,CAAA,wBAAqB;gCAAC;;;;;;;;;;;;;;;;;;0BAOxD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC,gKAAA,CAAA,UAAW;;;;;;;;;;;0BAId,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC,gKAAA,CAAA,UAAW;;;;;;;;;;;0BAGd,8OAAC,qKAAA,CAAA,UAAc;gBAAC,aAAa;;;;;;;;;;;;AAGnC","debugId":null}}]
}