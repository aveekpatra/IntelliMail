{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/mail/components/kbar/index.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mail/components/kbar/index.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mail/components/kbar/index.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/trpc/react.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,oBAAoB,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gCACA;AAEG,MAAM,MAAM,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,gCACA"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/theme-provicer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/theme-provicer.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+CACA"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/layout.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport Kbar from \"@/app/mail/components/kbar\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\n\nimport { GeistSans } from \"geist/font/sans\";\nimport { type Metadata } from \"next\";\n\nimport { TRPCReactProvider } from \"@/trpc/react\";\nimport { ThemeProvider } from \"@/components/theme-provicer\";\nimport { Toaster } from \"sonner\";\n\nexport const metadata: Metadata = {\n  title: \"Normal Human\",\n  icons: [{ rel: \"icon\", url: \"/favicon.ico\" }],\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{ children: React.ReactNode }>) {\n  return (\n    <ClerkProvider>\n      <html lang=\"en\" className={`${GeistSans.variable}`}>\n        <body>\n          <ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>\n            <TRPCReactProvider>\n              <Kbar>\n                {children}\n              </Kbar>\n            </TRPCReactProvider>\n            <Toaster />\n          </ThemeProvider>\n        </body>\n      </html>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAWO,MAAM,WAAqB;IAChC,OAAO;IACP,OAAO;QAAC;YAAE,KAAK;YAAQ,KAAK;QAAe;KAAE;AAC/C;AAEe,SAAS,WAAW,EACjC,QAAQ,EACgC;IACxC,qBACE,wPAAC,yKAAA,CAAA,gBAAa;kBACZ,cAAA,wPAAC;YAAK,MAAK;YAAK,WAAW,CAAC,EAAE,2LAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,CAAC;sBAChD,cAAA,wPAAC;0BACC,cAAA,wPAAC,uIAAA,CAAA,gBAAa;oBAAC,WAAU;oBAAQ,cAAa;oBAAS,YAAY;oBAAC,yBAAyB;;sCAC3F,wPAAC,qHAAA,CAAA,oBAAiB;sCAChB,cAAA,wPAAC,kJAAA,CAAA,UAAI;0CACF;;;;;;;;;;;sCAGL,wPAAC,wIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpB"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(auth)/mail/page.tsx"],"sourcesContent":["const MailPage = dynamic(() => import(\"@/app/mail/index\"), {\n  loading: () => <div>Loading...</div>,\n  ssr: false,\n});\nimport { ModeToggle } from \"@/components/theme-toggle\";\nimport { UserButton } from \"@clerk/nextjs\";\nimport dynamic from \"next/dynamic\";\nimport { Button } from \"@/components/ui/button\";\nimport ComposeButton from \"@/app/mail/components/compose-button\";\nimport WebhookDebugger from \"@/app/mail/components/webhook-debugger\";\nimport TopAccountSwitcher from \"./top-account-switcher\";\n\nexport const metadata = {\n  title: \"Mail - shadcn/ui\",\n  description: \"Example mail app built with shadcn/ui components\",\n};\n\nexport default function Home() {\n  return (\n    <div className=\"flex h-screen w-screen flex-col\">\n      <div className=\"hidden h-full w-full flex-1 md:flex\">\n        <MailPage />\n      </div>\n      <div className=\"block p-4 text-center md:hidden\">\n        <p>Mail interface not available on mobile devices.</p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,WAAW,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE,0HAAkC;IACzD,SAAS,kBAAM,wPAAC;sBAAI;;;;;;IACpB,KAAK;AACP;;AASO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAI,WAAU;0BACb,cAAA,wPAAC;;;;;;;;;;0BAEH,wPAAC;gBAAI,WAAU;0BACb,cAAA,wPAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}